Swagger routes;; on merkintä linkittää polun menetelmään. Tämä operaatio saa yksilöllisen id: n, jota käytetään eri paikoissa menetelmän nimellä. Yksi tällainen käyttö on menetelmien nimissä esimerkiksi asiakkaan luomista varten. 

Koska käytettävissä reittiä on monta, tätä työkalua ei riitä vain jäsentää polun, jotta tekijä antaa valitsemanssa reitityskirjaston. Siksi teossa pitää olla määritettävä polkumalli itselle kelvollisen syntaksin.
Lisää tietoa;; https://goswagger.io/use/spec/route.html

__________________________________________________________________

lowdb/adapters/FileSync - joku tämmöinen pieni paikallinen JSON tietokanta, mitä tukee Nodejs ja yms ohjelmistoa. 

Toistaisissa esimerkeissä on käytetty FileSync-sovitinta. Suurin osa tietokannoista toimii kuitenkin asynkronisesti, jotta sovelluksen suorittamista ei estetä. Lowdb: llä on myös asynkroninen sovitin. FileSync-sovittimen sijasta sinun on pikakäynnistettävä FileAsync-sovitin ja välitettävä se lowdb: lle. 

Sitten voit käyttää lowdb: n rajapintoja tavalliseen tapaan. Ainoa ero on, että sekä kirjoitus- että arvomenetelmät palauttavat lupauksia konkreettisten arvojen sijaan. Lähdekoodin pitämiseksi tyhjänä on suositeltavaa käyttää async / await -ohjelmaa. Esimerkki 6 esittää esimerkin, jossa tietue luodaan ensin ja luetaan sitten uudelleen tietokannasta. 

Lisää tietoa;; https://reposhub.com/javascript/storage/typicode-lowdb.html
https://helpdev.eu/node-js-lowdb-a-lightweight-database-alternative/

__________________________________________________________________

https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/routes

/* Pieni muistiinpannot nodejs & swagger ohjelmistosta

Swagger on käyttöliittymän kuvauskieli RESTful- sovellusliittymien kuvaamiseen JSON: lla . Swaggeria käytetään yhdessä avoimen lähdekoodin ohjelmistotyökalujen kanssa RESTful- verkkopalvelujen suunnitteluun, rakentamiseen, dokumentointiin ja käyttöön . Swagger sisältää automatisoidun dokumentaation, koodien generoinnin (monille ohjelmointikielille) ja testitapausten generoinnin. Swagger (ohjelmisto)

Tämä on valmis js pohja sovellus, että itse saa säätää siitä eteenpäin mitä haluaa. Eli lisää swagger ohjelmiston ominaisuuksia, mitkä liittyy siihen RESTful tiedonsiirtoon.

RESTful;;
Verkkopalvelun sovellusliittymiä, jotka noudattavat REST-arkkitehtuurirajoituksia, kutsutaan RESTful-sovellusliittymiksi. HTTP-pohjaiset RESTful-sovellusliittymät määritetään seuraavilla näkökohdilla: perus- URI , kuten http://api.example.com/; tavalliset HTTP-menetelmät (esim. GET, POST, PUT ja DELETE); median tyyppi , joka määrittelee tilan siirtymää dataelementit (esim Atom, mikromuotojen, sovellus / vnd.collection + json, jne.). Nykyinen esitys kertoo asiakkaalle, kuinka laatia siirtymispyynnöt kaikkiin seuraaviin käytettävissä oleviin sovellustiloihin. Tämä voi olla yhtä yksinkertaista kuin URI tai yhtä monimutkainen kuin Java-sovelma.

Ennen sitä pitää antaa terminal (komentolähteeseen) mitä npm pakettia pitää ladata. 
NPM on pakettihallintaohjelmisto javascriptiin varten.npm on JavaScript-ajonaikaisen ympäristön Node.js paketin oletushallinta . Se koostuu komentoriviasiakkaasta, jota kutsutaan myös nimellä npm, ja online-tietokannasta julkisista ja maksetuista yksityisistä paketeista, nimeltään npm-rekisteri. Rekisteriin pääsee asiakkaan kautta, ja saatavilla olevia paketteja voi selata ja hakea npm-verkkosivuston kautta.

RESTful documentti swagger ohjelmassa
https://docs.swagger.io/spec.html#url

Swagger-määrittely määrittelee joukon tiedostoja, joita tarvitaan tällaisen API: n kuvaamiseen. Swagger-UI-projekti voi sitten käyttää näitä tiedostoja API: n ja Swagger-Codegenin näyttämiseen asiakkaiden luomiseksi useilla kielillä. Muut apuohjelmat voivat myös hyödyntää tuloksena olevia tiedostoja, kuten testaustyökaluja. 

https://swagger.io/specification/#infoObject
*/
